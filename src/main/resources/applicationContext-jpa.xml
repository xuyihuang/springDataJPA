<beans xmlns="http://www.springframework.org/schema/beans"
	   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:aop="http://www.springframework.org/schema/aop"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xmlns:jpa="http://www.springframework.org/schema/data/jpa"
	   xmlns:context="http://www.springframework.org/schema/context"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx.xsd
           http://www.springframework.org/schema/data/jpa
           http://www.springframework.org/schema/data/jpa/spring-jpa.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="ignoreResourceNotFound" value="true"/>
		<property name="ignoreUnresolvablePlaceholders" value="true" />
	</bean>
	<bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
		<property name="url" value="jdbc:oracle:thin:@192.168.0.218:1521:ORCL" />
        <!--<property name="url" value="jdbc:log4jdbc:oracle:thin:@192.168.0.218:1521:ORCL" />-->
		<property name="username" value="CHAINWORK_UI_TEST_DATA" />
		<property name="password" value="F4y750" />
		<!--<property name="filters" value="stat" />-->
		<property name="initialSize" value="${datasource.initialSize:30}" />
		<property name="minIdle" value="${datasource.minIdle:10}" />
		<property name="maxActive" value="${datasource.maxActive:100}" />
		<property name="maxWait" value="${datasource.maxWait:60000}" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="300000" />
		<property name="poolPreparedStatements" value="${datasource.poolPreparedStatements:false}" />
		<property name="maxPoolPreparedStatementPerConnectionSize" value="${datasource.maxPoolPreparedStatementPerConnectionSize:50}" />
		<property name="validationQuery" value="select 1 from dual">
		</property>
		<property name="testWhileIdle" value="${datasource.testWhileIdle:true}" />
		<property name="testOnBorrow" value="${datasource.testOnBorrow:false}" />
		<property name="testOnReturn" value="${datasource.testOnReturn:false}" />
		<property name="proxyFilters">
			<list>
				<!--<ref bean="statFilter" />-->
				<ref bean="log4jFilter" />
				<!-- <ref bean="wallFilter" /> -->
			</list>
		</property>
	</bean>

	<bean id="log4jFilter" class="com.alibaba.druid.filter.logging.Log4jFilter">
		<property name="resultSetLogEnabled" value="false" />
		<property name="dataSourceLogEnabled" value="false" />
		<property name="connectionLogEnabled" value="false" />
		<property name="statementLogEnabled" value="true" />
		<property name="statementExecutableSqlLogEnable" value="true" />
	</bean>

	<!-- 使用cglib进行动态代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 支持注解方式声明式事务 -->
	<tx:annotation-driven transaction-manager="transactionManager" proxy-target-class="true" />
	<!-- dao -->
	<jpa:repositories query-lookup-strategy="create-if-not-found" base-package="com.xyh.demo.spring.repository" repository-impl-postfix="Impl" entity-manager-factory-ref="entityManagerFactory" transaction-manager-ref="transactionManager" />
	<!-- 实体管理器 -->
	<bean id="entityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="packagesToScan" value="com.xyh.demo.spring.model,com.xyh.demo.spring.item" />
		<property name="persistenceProvider">
			<bean class="org.hibernate.jpa.HibernatePersistenceProvider" />
		</property>
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="generateDdl" value="false" />
				 <property name="database" value="ORACLE" />
				<property name="databasePlatform" value="org.hibernate.dialect.Oracle10gDialect" />
				<property name="showSql" value="false" />
			</bean>
		</property>
		<property name="jpaDialect">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaDialect" />
		</property>
		<property name="jpaPropertyMap">
			<map>
				<entry key="hibernate.query.substitutions" value="true 1, false 0" />
				<entry key="hibernate.default_batch_fetch_size" value="16" />
				<entry key="hibernate.max_fetch_depth" value="2" />
				<entry key="hibernate.generate_statistics" value="true" />
				<entry key="hibernate.bytecode.use_reflection_optimizer" value="true" />
				<entry key="hibernate.cache.use_second_level_cache" value="false" />
				<entry key="hibernate.cache.use_query_cache" value="false" />
			</map>
		</property>
	</bean>

	<!-- 事务管理器 -->
	<bean id="transactionManager" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="entityManagerFactory"/>
	</bean>

    <bean id="entityManager" factory-bean="entityManagerFactory" factory-method="createEntityManager"></bean>
    <bean id="jpaQueryFactory" class="com.querydsl.jpa.impl.JPAQueryFactory">
        <constructor-arg name="entityManager" ref="entityManager"></constructor-arg>
    </bean>

	<context:component-scan base-package="com.xyh.demo.spring.repository"></context:component-scan>
	<context:annotation-config></context:annotation-config>

</beans>